<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
    <display-name>dq-kesh</display-name>

    <!-- 设置Spring配置文件的路径 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    
    <!-- 启动Web容器时，自动装配ApplicationContext的配置信息 -->
	<listener>
	    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
    
    
    <!-- 启动Web容器时， 自动启动一个监听线程,在springmvc.xml加载后启动-->
    <!--  
	    <listener>
	        <listener-class>com.tqy.util.thread.MyListener</listener-class>
	    </listener>
    --> 
    
    <!-- 前置控制器,拦截匹配的请求,把拦截下来的请求，依据相应的规则分发到目标Controller来处理 -->
    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springDispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <!-- 在启动Web容器时，启动一个监听线程 -->
    <!-- 完全加载成功后启动 -->
	<servlet>  
	    <servlet-name>MyListener</servlet-name>  
	    <servlet-class>com.tqy.util.thread.MyServlet</servlet-class>  
	    <load-on-startup>2</load-on-startup><!-- 数字越小，启动的优先级越高，必须大于0 -->  
	</servlet>  
	<servlet-mapping>    
	    <servlet-name>MyListener</servlet-name>    
	    <url-pattern>/test</url-pattern>
	</servlet-mapping>  
    
    <!-- Spring MVC过滤器-字符集过滤器 -->
    <!-- 将request、response都设置成utf-8 -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>forceResponseEncodin</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <!-- 对于所有映射都成立 -->
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  
  
    <!-- Spring MVC过滤器-请求方法过滤器 -->
    <!-- 实现restful风格，将浏览的post和get方法转换成post、delete、put、get -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  
    <!-- Spring MVC过滤器-表单内容过滤器 -->
    <!-- 获取method=put的表单值,且只能接受enctype="application/x-www-form-urlencoded"的表单 -->
    <filter>
        <filter-name>HttpPutFormContentFilter</filter-name>
        <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HttpPutFormContentFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>